- name:  Add hypervisor host in inventory
  hosts: localhost
  vars_files:
    - variables.yaml
    - overcloud-ansible-nodes.json
  tasks:
  - name: Add all hypervisor group-host
    add_host:
      name: "{{ item.hypervisor_name }}"
      ansible_ssh_user: "{{ item.hypervisor_user }}"
      ansible_ssh_private_key_file: "{{ item.hypervisor_ssh_key }}"
      groups:
        - hypervisor_host
    with_items: "{{ undercloud_nodes }}"
    when: item.hypervisor_name != "localhost"

- name:  Add Undercloud VM/Node
  hosts: localhost
  vars_files:
    - variables.yaml
    - overcloud-ansible-nodes.json
  tasks:
  - name: Add undercloud group-host
    add_host:
      name: "{{ undercloud_n }}.{{ domain }}"
      ansible_ssh_pass: "{{ secure_password }}"
      ansible_ssh_user: stack
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p -q {{ item.hypervisor_user }}@{{ item.hypervisor_name }}"'
      groups:
        - undercloud
    when: item.hypervisor_name != "localhost"
    with_items:
      - "{{ undercloud_nodes }}"

  - name: Add undercloud group-host for localhost hypervisor
    add_host:
      name: "{{ undercloud_n }}.{{ domain }}"
      ansible_ssh_pass: "{{ secure_password }}"
      ansible_ssh_user: stack
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null '
      groups:
        - undercloud
    when: item.hypervisor_name == "localhost"
    with_items:
      - "{{ undercloud_nodes }}"

- name: Upgrade RHOSP on UC
  hosts: undercloud
  vars_files:
    - variables.yaml
    - overcloud-ansible-nodes.json
  tasks:
  - name: Lock release to 8.4
    shell: |
      sudo subscription-manager release --set=8.4

  - name: Disable repos
    shell: |
      sudo subscription-manager repos --disable=*

  - name: Enable repos
    shell: |
      sudo subscription-manager repos \
        --enable=rhel-8-for-x86_64-baseos-eus-rpms \
        --enable=rhel-8-for-x86_64-appstream-eus-rpms \
        --enable=rhel-8-for-x86_64-highavailability-eus-rpms \
        --enable=ansible-2.9-for-rhel-8-x86_64-rpms \
        --enable=openstack-16.2-for-rhel-8-x86_64-rpms \
        --enable=fast-datapath-for-rhel-8-x86_64-rpms \
        --enable=advanced-virt-for-rhel-8-x86_64-rpms
    register: repository_status

  - name: Print UC repository
    debug:
      var: repository_status.stdout_lines

  - name: Set container-tools module
    shell: |
      sudo dnf module disable -y container-tools:rhel8
      STATUS=$?
      if [ ${STATUS} -gt 0 ]; then
        echo "Error when disabling container-tools, Exit..."
        exit 1
      fi
      sudo dnf module enable -y container-tools:3.0

  - name: Set virt module
    shell: |
      sudo dnf module disable -y virt:rhel
      STATUS=$?
      if [ ${STATUS} -gt 0 ]; then
        echo "Error when disabling virt module, Exit..."
        exit 1
      fi
      sudo dnf module enable -y virt:av

  - name: Run distro-sync
    shell: |
      sudo dnf distro-sync -y
    register: distro_sync

  - name: Print UC distro-sync
    debug:
      var: distro_sync.stdout_lines

  - name: Reboot UC
    reboot:
      reboot_timeout: 7200
    become: True

  - name: re-run gather facts
    setup:

  - name: Install python3-tripleoclient
    shell: |
      sudo dnf install -y python3-tripleoclient
    register: dnf_install

  - name: Print UC python3-tripleoclient installation
    debug:
      var: dnf_install.stdout_lines
  
  - name: Generate containers-prepare-parameter.yaml
    shell: |
      sudo openstack tripleo container image prepare default \
        --local-push-destination \
        --output-env-file containers-prepare-parameter.yaml

  - name: Change ownership of containers-prepare-parameter.yaml
    shell: |
      sudo chown stack:stack /home/stack/containers-prepare-parameter.yaml

  - name: Add credential for registry.redhat.io
    blockinfile:
      path: /home/stack/containers-prepare-parameter.yaml
      backup: True
      marker: "# ANSIBLE MANAGED BLOCK - CREDENTIAL"
      block: |2
          ContainerImageRegistryCredentials:
            registry.redhat.io:
              {{ rhregistry_user }}: '{{ rhregistry_password }}'

  - name: Add stein and ceph3 containers
    blockinfile:
      path: /home/stack/containers-prepare-parameter.yaml
      backup: True
      marker: "# ANSIBLE MANAGED BLOCK - STEIN - CEPH3"
      insertafter: "tag:"
      block: |2
              name_prefix_stein: openstack-
              name_suffix_stein: ''
              namespace_stein: registry.redhat.io/rhosp15-rhel8
              tag_stein: 15.0
              ceph3_namespace: registry.redhat.io/rhceph
              ceph3_tag: latest
              ceph3_image: rhceph-3-rhel7

  - name: Set neutrondriver to openvswitch
    shell: |
      sed -i -E 's/neutron_driver:\s+[a-z]+/neutron_driver: openvswitch/g' containers-prepare-parameter.yaml

  - name: Backup undercloud.conf preffu
    shell: |
      cat /home/stack/undercloud.conf | egrep -v '^(#|$)' > /home/stack/undercloud.conf.preffu.$(date +%Y-%m-%d-%H%M)

  - name: Copy new undercloud.conf 
    template:
      src: ansible-templates/home/stack/osp16_undercloud.conf
      dest: /home/stack/undercloud.conf
      backup: True
      owner: stack
      group: stack
      mode: 0644

  - name: Copy undercloud upgrade script
    copy:
      dest: /home/stack/osp16_openstack_undercloud_upgrade.sh
      mode: 0755
      owner: stack
      group: stack
      content: |
        openstack undercloud upgrade -y  2>&1 | tee -a /home/stack/logs/osp16_openstack_undercloud_upgrade_$(date +%Y-%m-%d-%H%M).log

  - name: messages for debug
    debug:
      msg:
        - "################# RUN TMUX ##################"
        - "# tmux"
        - "# su - stack"
        - "$ cd /home/stack"
        - "$ /home/stack/osp16_openstack_undercloud_upgrade.sh"

  - name: Pause to run playbook
    pause: prompt='Did you run the /home/stack/osp16_openstack_undercloud_upgrade.sh script??? Press return to continue. Press Ctrl+c and then "a" to abort'

