- name:  Add hypervisor host in inventory
  hosts: localhost
  vars_files:
    - variables.yaml
    - overcloud-ansible-nodes.json
  tasks:
  - name: Add all hypervisor group-host
    add_host:
      name: "{{ item.hypervisor_name }}"
      ansible_ssh_user: "{{ item.hypervisor_user }}"
      ansible_ssh_private_key_file: "{{ item.hypervisor_ssh_key }}"
      groups:
        - hypervisor_host
    with_items: "{{ undercloud_nodes }}"
    when: item.hypervisor_name != "localhost"

- name:  Add Undercloud VM/Node
  hosts: localhost
  vars_files:
    - variables.yaml
    - overcloud-ansible-nodes.json
  tasks:
  - name: Add undercloud group-host
    add_host:
      name: "{{ undercloud_n }}.{{ domain }}"
      ansible_ssh_pass: "{{ secure_password }}"
      ansible_ssh_user: stack
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p -q {{ item.hypervisor_user }}@{{ item.hypervisor_name }}"'
      groups:
        - undercloud
    when: item.hypervisor_name != "localhost"
    with_items:
      - "{{ undercloud_nodes }}"

  - name: Add undercloud group-host for localhost hypervisor
    add_host:
      name: "{{ undercloud_n }}.{{ domain }}"
      ansible_ssh_pass: "{{ secure_password }}"
      ansible_ssh_user: stack
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null '
      groups:
        - undercloud
    when: item.hypervisor_name == "localhost"
    with_items:
      - "{{ undercloud_nodes }}"

- name: Run preliminary check
  hosts: undercloud
  vars_files:
    - variables.yaml
    - overcloud-ansible-nodes.json
  tasks:
  - name: Check available space
    shell: |
      ansible -m shell all -i ~/inventory.yaml -a 'df -h -t xfs'
    register: df_xfs

  - name: Print available space
    debug:
      var: df_xfs.stdout_lines

  - name: Pause to check space
    pause: prompt='Is there enough space??? Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: Check link on Controller
    shell: |
      ansible -m shell Controller -i ~/inventory.yaml -b -a 'os-net-config -c /etc/os-net-config/config.json --noop -d 2>&1 | grep mapped  | sort | wc -l'  -o
    register: nic_link

  - name: Print controller nic link count
    debug:
      var: nic_link.stdout_lines

  - name: Pause to check nic link on Controller
    pause: prompt='Is there enough link??? Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: Check link on Compute
    shell: |
      ansible -m shell Compute -i ~/inventory.yaml -b -a 'os-net-config -c /etc/os-net-config/config.json --noop -d 2>&1 | grep mapped  | sort | wc -l'  -o
    register: nic_link

  - name: Print compute nic link count
    debug:
      var: nic_link.stdout_lines

  - name: Pause to check nic link on Compute
    pause: prompt='Is there enough link??? Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: Check link on Ceph
    shell: |
      ansible -m shell Ceph -i ~/inventory.yaml -b -a 'os-net-config -c /etc/os-net-config/config.json --noop -d 2>&1 | grep mapped  | sort | wc -l'  -o
    register: nic_link

  - name: Print Ceph nic link count
    debug:
      var: nic_link.stdout_lines

  - name: Pause to check nic link on Ceph
    pause: prompt='Is there enough link??? Press return to continue. Press Ctrl+c and then "a" to abort'

