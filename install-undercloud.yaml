- name:  Add Undercloud VM/Node
  hosts: localhost
  vars_files:
    - variables.yaml
  tasks:
  - name: Add undercloud group-host
    add_host:
      name: "{{ undercloud_n }}.{{ domain }}"
      ansible_ssh_private_key_file: ansible-ssh/id_rsa
      ansible_ssh_user: stack
      groups:
        - undercloud

  - name: Generating instackenv.json - Step 1
    shell:
      cmd: |
        cat >> /tmp/instackenv.tmp << EOF
        {
          "nodes": [
        EOF
        for I in {{ all_n }}; do
          MAC=$(virsh domiflist $I | grep bridge | head -1 | awk {'print $5'})
          IPBMC=$(vbmc list | grep $I | awk '{print $6}')
        cat << EOF >> /tmp/instackenv.tmp
        {
          "name": "$I",
          "pm_addr": "$IPBMC",
          "pm_password": "{{ secure_password }}",
          "pm_type": "ipmi",
          "mac": [
            "${MAC}"
          ],
          "pm_user": "admin"
        },
        EOF
        done

  - name: Generating instackenv.json - Step 2 Remove last line
    lineinfile:
      dest: /tmp/instackenv.tmp
      regexp: ''
      insertafter: EOF
      line: ''

  - name: Generating instackenv.json - Step 3
    shell:
      cmd: |
        cat >> /tmp/instackenv.tmp << EOF
            }
          ]
        }
        EOF

  - name: Generating instackenv.json - Step 4
    shell: |
      jq . /tmp/instackenv.tmp > /tmp/instackenv.json

- name:  Install Undercloud
  hosts: undercloud
  vars_files:
    - variables.yaml
  tasks:
  - name: Copy undercloud.conf
    copy:
      src: /usr/share/instack-undercloud/undercloud.conf.sample
      dest: /home/stack/undercloud.conf
      remote_src: True
      owner: stack
      group: stack
      mode: '0644'

  - name: Copy instackenv.json
    copy:
      src: /tmp/instackenv.json
      dest: /home/stack/instackenv.json
      owner: stack
      group: stack
      mode: '0600'

  - name: Run crudini on undercloud.conf
    shell: |
      crudini --set /home/stack/undercloud.conf DEFAULT local_ip {{ undercloud_ip_prv }}/{{ undercloud_netmask }}
      crudini --set /home/stack/undercloud.conf DEFAULT undercloud_public_vip {{ undercloud_public_vip }}
      crudini --set /home/stack/undercloud.conf DEFAULT undercloud_admin_vip {{ undercloud_admin_vip }}
      crudini --set /home/stack/undercloud.conf DEFAULT local_interface {{ undercloud_local_interface }}
      crudini --set /home/stack/undercloud.conf DEFAULT generate_service_certificate false
      crudini --set /home/stack/undercloud.conf DEFAULT dhcp_start {{ undercloud_dhcp_start }}
      crudini --set /home/stack/undercloud.conf DEFAULT dhcp_end {{ undercloud_dhcp_end }}
      crudini --set /home/stack/undercloud.conf DEFAULT network_cidr {{ undercloud_network_cidr }}/{{ undercloud_netmask }}
      crudini --set /home/stack/undercloud.conf DEFAULT network_gateway {{ undercloud_network_gateway }}
      crudini --set /home/stack/undercloud.conf DEFAULT discovery_iprange {{ undercloud_discovery_iprange }}
      crudini --set /home/stack/undercloud.conf DEFAULT inspection_iprange {{ undercloud_inspection_iprange }}

  - name: messages for debug
    debug:
      msg:
        - "################# RUN TMUX ##################"
        - "# tmux"
        - "# su - stack"
        - "$ cd /home/stack"
        - "$ openstack undercloud install"

  - name: Pause to run playbook
    pause: prompt='Did you run the openstack undercloud install??? Press return to continue. Press Ctrl+c and then "a" to abort'

  #- name: Run openstack undercloud install
  #  shell: |
  #    openstack undercloud install
  #  async: 7200
  #  poll: 10

  - name: Install rhosp images
    yum:
      name: "{{ item }}"
      state: present
    become: True
    with_items:
      - rhosp-director-images
      - rhosp-director-images-ipa

  - name: Create images directory
    file:
      path: /home/stack/images
      state: directory

  - name: Unarchive images
    unarchive:
      src: "{{ item }}"
      dest: /home/stack/images
      remote_src: True
    with_items:
      - /usr/share/rhosp-director-images/overcloud-full-latest-13.0.tar
      - /usr/share/rhosp-director-images/ironic-python-agent-latest-13.0.tar

  - name: Set root password on the image
    shell: |
      virt-customize -a /home/stack/images/overcloud-full.qcow2 --root-password password:{{ secure_password }}

  - name: Upload Overcloud Images to Undercloud Glance.
    shell: |
      source /home/stack/stackrc
      openstack overcloud image upload --image-path /home/stack/images/
