- name:  Prepare Hetzner Hypervisor
  hosts: hetzner
  vars_files:
    - variables.yaml
  tasks:
  - name: Setting hostname in /etc/hosts
    copy:
      dest: /etc/hosts
      backup: True
      owner: root
      group: root
      mode: '0644'
      content: |
        ### ansible managed
        127.0.0.1 localhost.localdomain localhost
        {{ ansible_default_ipv4.address }} kvmlab.example.com kvmlab
        #### lab
        192.168.201.30  undercloud-prv.example.com              undercloud-prv
        192.168.122.30  undercloud.example.com          undercloud
        192.168.201.31  controller-1.example.com        controller-1
        192.168.201.32  controller-2.example.com        controller-2
        192.168.201.33  controller-3.example.com        controller-3
        192.168.201.41  compute-1.example.com           compute-1
        192.168.201.42  compute-2.example.com           compute-2
        192.168.201.51  ceph-1.example.com              ceph-1
        192.168.201.52  ceph-2.example.com              ceph-2
        192.168.201.53  ceph-3.example.com              ceph-3
        #### lab
        {{ ansible_default_ipv6.address }} kvmlab.example.com kvmlab


  - name: Enable SELinux
    selinux:
      policy: targeted
      state: enforcing

  - name: Setting RP_Filter to 0 permanently.
    copy:
      dest: /etc/sysctl.d/99-hetzner.conf
      content: |
        net.ipv4.ip_forward=1
        net.ipv4.conf.default.rp_filter = 0
        net.ipv4.conf.all.rp_filter = 0

  - name: Getting rp_filter variables to set
    shell: |
      sysctl -A 2> /dev/null | grep "\.rp_filter"  | cut -d"=" -f1
    register: sysctl_rp_filter

  - name: Setting Systcl rp_filter variables dynamically
    sysctl:
      name: "{{ item }}"
      value: '0'
      sysctl_set: yes
      state: present
    ignore_errors: True
    with_items:
      - "{{ sysctl_rp_filter.stdout_lines }}"

  - name: restart sysctl
    systemd:
      name: systemd-sysctl.service
      state: restarted

  - name: Check if bridge exist
    shell: |
      ip link show {{ bridge_n }}
    ignore_errors: True
    changed_when: False
    register: bridge_link

  - name: Create the bridge
    shell: |
      ip link add name {{ bridge_n }} type bridge
    when: bridge_link.rc == 1

  - name: Check vlan2003
    shell: |
      ip link show vlan2003
    register: vlan2003_link
    changed_when: False
    ignore_errors: True

  - name: Create vlan2003
    shell: |
      ip link add link {{ bridge_n }} name vlan2003 type vlan id 2003
    when: vlan2003_link.rc == 1

  - name: Check vlan2007
    shell: |
      ip link show vlan2007
    register: vlan2007_link
    ignore_errors: True
    changed_when: False

  - name: Create vlan2007
    shell: |
      ip link add link {{ bridge_n }} name vlan2007 type vlan id 2007
    when: vlan2007_link.rc == 1

  - name: Add IPs to bridge
    shell: |
      ip addr add 192.168.201.1/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.10/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.11/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.12/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.13/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.14/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.15/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.16/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.17/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.18/24 dev {{ bridge_n }} || /bin/true
      ip addr add 192.168.201.19/24 dev {{ bridge_n }} || /bin/true

  - name: Add IPs to vlan2003
    shell: |
      ip addr add 192.168.203.1/24 dev vlan2003 || /bin/true

  - name: Add IPs to vlan2007
    shell: |
      ip addr add 192.168.207.1/24 dev vlan2007 || /bin/true

  - name: install rdo release
    shell: |
      dnf install https://repos.fedorapeople.org/repos/openstack/openstack-train/rdo-release-train-3.el8.noarch.rpm -y

  - name: Install some packages
    dnf:
      name:
        - ansible
        - tmux
        - nmap
        - tcpdump
        - bind-utils
        - jq
        - vim
        - bash-completion
        - git
        - iptables-services
        - NetworkManager-libnm
        - python3-libsemanage
        - policycoreutils-python-utils
        - nm-connection-editor
        - python3-policycoreutils
        - pciutils
        - libvirt
        - qemu-kvm
        - virt-manager
        - virt-install
        - libguestfs-tools
        - libguestfs-xfs
        - virt-viewer
        - net-tools
        - mlocate
        - sshpass
        - python3-virtualbmc
      state: present

  - name: Upgrade system
    dnf:
      name: '*'
      state: latest

  - name: disable firewalld
    systemd:
      name: firewalld
      state: stopped
      enabled: False

  - name: iptables flush filter
    iptables:
      chain: "{{ item }}"
      flush: yes
    with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]

  - name: iptables flush nat
    iptables:
      table: nat
      chain: '{{ item }}'
      flush: yes
    with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]

  - name: Allow related and established connections
    iptables:
      chain: INPUT
      ctstate: ESTABLISHED,RELATED
      jump: ACCEPT

  - name: Allow new incoming SYN packets on TCP port 22 (SSH).
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: 22
      ctstate: NEW
      syn: match
      jump: ACCEPT
      comment: Accept new SSH connections.

  - name: enable traffic from loopback
    iptables:
      chain: INPUT
      in_interface: lo
      jump: ACCEPT

  - name: enable icmp
    iptables:
      chain: INPUT
      protocol: icmp
      jump: ACCEPT

  - name: Allow ipmi incoming traffic
    iptables:
      chain: INPUT
      protocol: udp
      source: 192.168.0.0/16
      destination_port: 623
      jump: ACCEPT

  - name: Set the last rule as REJECT for INPUT
    iptables:
      chain: INPUT
      jump: REJECT

  - name: enable forward for 192.168.0.0/16
    iptables:
      chain: FORWARD
      source: 192.168.0.0/16
      jump: ACCEPT

  - name: enable MASQUERADING
    iptables:
      table: nat
      chain: POSTROUTING
      source: 192.168.0.0/16
      jump: MASQUERADE

  - name: Set the last rule as REJECT for FORWARD
    iptables:
      chain: FORWARD
      jump: REJECT

  - name: save iptables configuration
    shell: |
      /usr/sbin/iptables-save > /etc/sysconfig/iptables

  - name: enable iptables services
    systemd:
      name: iptables
      state: started
      enabled: True

  - name: enable ip6tables services
    systemd:
      name: ip6tables
      state: started
      enabled: True

  - name: enable virt module
    shell: |
      dnf module enable virt:rhel
      dnf distro-sync -y

  - name: Restart Libvirtd Service
    systemd:
      state: restarted
      name: libvirtd
      enabled: yes

  - name: ensure that bridge is up - wa
    copy:
      dest: /etc/cron.d/bridge-up
      owner: root
      group: root
      mode: '0644'
      content: |
        SHELL=/bin/bash
        PATH=/sbin:/bin:/usr/sbin:/usr/bin
        */1 * * * * root /usr/sbin/ip link set {{ bridge_n }} up

  - name: clone repo
    shell: |
      cd /root
      git clone https://github.com/amedeos/rhosp-lab-amedeos
    ignore_errors: True

  - name: create images dir
    file:
      path: /root/images
      state: directory

